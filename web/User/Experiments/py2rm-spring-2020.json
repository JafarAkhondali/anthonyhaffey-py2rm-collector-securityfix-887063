{"all_procs": {"procedure.csv": [["item", "trial type", "max time", "text", "shuffle 1", "survey", ""], ["0", "instruct", "user", "Thank you for participating in this experiment.", "off", "\t", ""], ["2", "instruct", "user", "Thank you for participating in this experiment.", "off", "\t", ""], ["2 to 9", "finger_imitation", "user", "", "trials", "", ""], ["0", "survey", "user", "", "off", "demographics_py2rm_2020.csv", ""], ["", "", "", "", "", "", ""]]}, "cond_array": [["Name", "Notes", "Stimuli", "Procedure", "fullscreen", "welcome", "participant_id", "end_message", "start_message", "buffer", "download_at_end", ""], ["condition_1", "You can put more detailed notes in this field", "Stimuli.csv", "Procedure.csv", "off", "", "random", "", "", "5", "off", ""], ["", ""]], "Conditions.csv": [["Name", "Notes", "Stimuli 1", "Procedure 1"], ["New Experiment", "You can put more detailed notes in this field", "Stimuli.csv", "Procedure.csv"]], "all_stims": {"stimuli.csv": [["Cue", "Answer", "face", "emotion", "gender", "identity", ""], ["A", "Apple", "AF01ANS.JPG", "angry", "female", "1", ""], ["B", "Banana", "AF01HAS.JPG", "happy", "female", "1", ""], ["", "", "AF02ANS.JPG", "angry", "female", "2", ""], ["", "", "AF02HAS.JPG", "happy", "female", "2", ""], ["", "", "AF03ANS.JPG", "angry", "female", "3", ""], ["", "", "AF03HAS.JPG", "happy", "female", "3", ""], ["", "", "AF04ANS.JPG", "angry", "female", "4", ""], ["", "", "AF04HAS.JPG", "happy", "female", "4", ""], ["", "", "AF05ANS.JPG", "angry", "female", "5", ""], ["", "", "AF05HAS.JPG", "happy", "female", "5", ""], ["", "", "AF06ANS.JPG", "angry", "female", "6", ""], ["", "", "AF06HAS.JPG", "happy", "female", "6", ""], ["", "", "AF07ANS.JPG", "angry", "female", "7", ""], ["", "", "AF07HAS.JPG", "happy", "female", "7", ""], ["", "", "AF08ANS.JPG", "angry", "female", "8", ""], ["", "", "AF08HAS.JPG", "happy", "female", "8", ""], ["", "", "AF09ANS.JPG", "angry", "female", "9", ""], ["", "", "AF09HAS.JPG", "happy", "female", "9", ""], ["", "", "AF10ANS.JPG", "angry", "female", "10", ""], ["", "", "AF10HAS.JPG", "happy", "female", "10", ""], ["", "", "AF11ANS.JPG", "angry", "female", "11", ""], ["", "", "AF11HAS.JPG", "happy", "female", "11", ""], ["", "", "AF12ANS.JPG", "angry", "female", "12", ""], ["", "", "AF12HAS.JPG", "happy", "female", "12", ""], ["", "", "AF13ANS.JPG", "angry", "female", "13", ""], ["", "", "AF13HAS.JPG", "happy", "female", "13", ""], ["", "", "AF14ANS.JPG", "angry", "female", "14", ""], ["", "", "AF14HAS.JPG", "happy", "female", "14", ""], ["", "", "AF15ANS.JPG", "angry", "female", "15", ""], ["", "", "AF15HAS.JPG", "happy", "female", "15", ""], ["", "", "AF16ANS.JPG", "angry", "female", "16", ""], ["", "", "AF16HAS.JPG", "happy", "female", "16", ""], ["", "", "AF17ANS.JPG", "angry", "female", "17", ""], ["", "", "AF17HAS.JPG", "happy", "female", "17", ""], ["", "", "AF18ANS.JPG", "angry", "female", "18", ""], ["", "", "AF18HAS.JPG", "happy", "female", "18", ""], ["", "", "AF19ANS.JPG", "angry", "female", "19", ""], ["", "", "AF19HAS.JPG", "happy", "female", "19", ""], ["", "", "AF20ANS.JPG", "angry", "female", "20", ""], ["", "", "AF20HAS.JPG", "happy", "female", "20", ""], ["", "", "AF21ANS.JPG", "angry", "female", "21", ""], ["", "", "AF21HAS.JPG", "happy", "female", "21", ""], ["", "", "AF22ANS.JPG", "angry", "female", "22", ""], ["", "", "AF22HAS.JPG", "happy", "female", "22", ""], ["", "", "AF23ANS.JPG", "angry", "female", "23", ""], ["", "", "AF23HAS.JPG", "happy", "female", "23", ""], ["", "", "AF24ANS.JPG", "angry", "female", "24", ""], ["", "", "AF24HAS.JPG", "happy", "female", "24", ""], ["", "", "AF25ANS.JPG", "angry", "female", "25", ""], ["", "", "AF25HAS.JPG", "happy", "female", "25", ""], ["", "", "AF26ANS.JPG", "angry", "female", "26", ""], ["", "", "AF26HAS.JPG", "happy", "female", "26", ""], ["", "", "AF27ANS.JPG", "angry", "female", "27", ""], ["", "", "AF27HAS.JPG", "happy", "female", "27", ""], ["", "", "AF28ANS.JPG", "angry", "female", "28", ""], ["", "", "AF28HAS.JPG", "happy", "female", "28", ""], ["", "", "AF29ANS.JPG", "angry", "female", "29", ""], ["", "", "AF29HAS.JPG", "happy", "female", "29", ""], ["", "", "AF30ANS.JPG", "angry", "female", "30", ""], ["", "", "AF30HAS.JPG", "happy", "female", "30", ""], ["", "", "AF31ANS.JPG", "angry", "female", "31", ""], ["", "", "AF31HAS.JPG", "happy", "female", "31", ""], ["", "", "AF32ANS.JPG", "angry", "female", "32", ""], ["", "", "AF32HAS.JPG", "happy", "female", "32", ""], ["", "", "AF33ANS.JPG", "angry", "female", "33", ""], ["", "", "AF33HAS.JPG", "happy", "female", "33", ""], ["", "", "AF34ANS.JPG", "angry", "female", "34", ""], ["", "", "AF34HAS.JPG", "happy", "female", "34", ""], ["", "", "AF35ANS.JPG", "angry", "female", "35", ""], ["", "", "AF35HAS.JPG", "happy", "female", "35", ""], ["", "", "AN01ANS.JPG", "angry", "male", "1", ""], ["", "", "AN01HAS.JPG", "happy", "male", "1", ""], ["", "", "AN02ANS.JPG", "angry", "male", "2", ""], ["", "", "AN02HAS.JPG", "happy", "male", "2", ""], ["", "", "AN03ANS.JPG", "angry", "male", "3", ""], ["", "", "AN03HAS.JPG", "happy", "male", "3", ""], ["", "", "AN04ANS.JPG", "angry", "male", "4", ""], ["", "", "AN04HAS.JPG", "happy", "male", "4", ""], ["", "", "AN05ANS.JPG", "angry", "male", "5", ""], ["", "", "AN05HAS.JPG", "happy", "male", "5", ""], ["", "", "AN06ANS.JPG", "angry", "male", "6", ""], ["", "", "AN06HAS.JPG", "happy", "male", "6", ""], ["", "", "AN07ANS.JPG", "angry", "male", "7", ""], ["", "", "AN07HAS.JPG", "happy", "male", "7", ""], ["", "", "AN08ANS.JPG", "angry", "male", "8", ""], ["", "", "AN08HAS.JPG", "happy", "male", "8", ""], ["", "", "AN09ANS.JPG", "angry", "male", "9", ""], ["", "", "AN09HAS.JPG", "happy", "male", "9", ""], ["", "", "AN10ANS.JPG", "angry", "male", "10", ""], ["", "", "AN10HAS.JPG", "happy", "male", "10", ""], ["", "", "AN11ANS.JPG", "angry", "male", "11", ""], ["", "", "AN11HAS.JPG", "happy", "male", "11", ""], ["", "", "AN12ANS.JPG", "angry", "male", "12", ""], ["", "", "AN12HAS.JPG", "happy", "male", "12", ""], ["", "", "AN13ANS.JPG", "angry", "male", "13", ""], ["", "", "AN13HAS.JPG", "happy", "male", "13", ""], ["", "", "AN14ANS.JPG", "angry", "male", "14", ""], ["", "", "AN14HAS.JPG", "happy", "male", "14", ""], ["", "", "AN15ANS.JPG", "angry", "male", "15", ""], ["", "", "AN15HAS.JPG", "happy", "male", "15", ""], ["", "", "AN16ANS.JPG", "angry", "male", "16", ""], ["", "", "AN16HAS.JPG", "happy", "male", "16", ""], ["", "", "AN17ANS.JPG", "angry", "male", "17", ""], ["", "", "AN17HAS.JPG", "happy", "male", "17", ""], ["", "", "AN18ANS.JPG", "angry", "male", "18", ""], ["", "", "AN18HAS.JPG", "happy", "male", "18", ""], ["", "", "AN19ANS.JPG", "angry", "male", "19", ""], ["", "", "AN19HAS.JPG", "happy", "male", "19", ""], ["", "", "AN20ANS.JPG", "angry", "male", "20", ""], ["", "", "AN20HAS.JPG", "happy", "male", "20", ""], ["", "", "AN21ANS.JPG", "angry", "male", "21", ""], ["", "", "AN21HAS.JPG", "happy", "male", "21", ""], ["", "", "AN22ANS.JPG", "angry", "male", "22", ""], ["", "", "AN22HAS.JPG", "happy", "male", "22", ""], ["", "", "AN23ANS.JPG", "angry", "male", "23", ""], ["", "", "AN23HAS.JPG", "happy", "male", "23", ""], ["", "", "AN24ANS.JPG", "angry", "male", "24", ""], ["", "", "AN24HAS.JPG", "happy", "male", "24", ""], ["", "", "AN25ANS.JPG", "angry", "male", "25", ""], ["", "", "AN25HAS.JPG", "happy", "male", "25", ""], ["", "", "AN26ANS.JPG", "angry", "male", "26", ""], ["", "", "AN26HAS.JPG", "happy", "male", "26", ""], ["", "", "AN27ANS.JPG", "angry", "male", "27", ""], ["", "", "AN27HAS.JPG", "happy", "male", "27", ""], ["", "", "AN28ANS.JPG", "angry", "male", "28", ""], ["", "", "AN28HAS.JPG", "happy", "male", "28", ""], ["", "", "AN29ANS.JPG", "angry", "male", "29", ""], ["", "", "AN29HAS.JPG", "happy", "male", "29", ""], ["", "", "AN30ANS.JPG", "angry", "male", "30", ""], ["", "", "AN30HAS.JPG", "happy", "male", "30", ""], ["", "", "AN31ANS.JPG", "angry", "male", "31", ""], ["", "", "AN31HAS.JPG", "happy", "male", "31", ""], ["", "", "AN32ANS.JPG", "angry", "male", "32", ""], ["", "", "AN32HAS.JPG", "happy", "male", "32", ""], ["", "", "AN33ANS.JPG", "angry", "male", "33", ""], ["", "", "AN33HAS.JPG", "happy", "male", "33", ""], ["", "", "AN34ANS.JPG", "angry", "male", "34", ""], ["", "", "AN34HAS.JPG", "happy", "male", "34", ""], ["", "", "AN35ANS.JPG", "angry", "male", "35", ""], ["", "", "AN35HAS.JPG", "happy", "male", "35", ""], ["", "", "", "", "", "", ""]]}, "procedure": null, "stimuli": null, "public_key": "qbLtY/WKogexV2MtzKeCjHng8DKNjOOmIfEnpj1Z90A=", "save_script": "https://script.google.com/macros/s/AKfycbyMQS4T2DpGkq6Ue4IDaRVHKKuQXoOnCm0116m92hmQTfn-Syk/exec", "parsed_procs": {"procedure.csv": [{"item": "0", "trial type": "instruct", "max time": "user", "text": "Thank you for participating in this experiment.", "shuffle 1": "off", "survey": "\t", "": ""}, {"item": "2", "trial type": "instruct", "max time": "user", "text": "Thank you for participating in this experiment.", "shuffle 1": "off", "survey": "\t", "": ""}, {"item": "2 to 9", "trial type": "finger_imitation", "max time": "user", "text": "", "shuffle 1": "trials", "survey": "", "": ""}, {"item": "0", "trial type": "survey", "max time": "user", "text": "", "shuffle 1": "off", "survey": "demographics_py2rm_2020.csv", "": ""}]}, "surveys": {"demographics_py2rm_2020": [["item_name", "text", "Type", "Answers", "Optional", "Values", null], ["Gender", "Gender", "likert", "Male|Female|Other", "No", "", null], ["Age", "Age", "Number", "", "No", "", null], ["Education", "Education (which level are you currently in, or is the highest you've completed)", "Dropdown", "Some high school| High school graduate| Some college, no degree| Associate's degree| Bachelor's degree|Graduate degree (Master's, Doctorate, etc.)", "No", "", null], ["English_Fluency", "Do you speak English fluently?", "likert", "Yes|No", "No", "", null], ["English_Age", "At what age did you start learning English? (write \"0\" if from birth)", "Number", "", "No", "", null], ["Country", "What is your country of residence?", "Text", "", "No", "", null], ["Handedness", "What is your preferred hand?", "Likert", "Left|Right|Both", "No", "", null], ["ethnicity", "If you would like to please state your ethnicity", "Dropdown", "Caucasian|East Asian|South Asian|African|Other", "Yes", "", null], ["", null]]}, "trialtypes": {"instruct": "<!--\n/*  Collector (Garcia, Kornell, Kerr, Blake & Haffey)\n    A program for running experiments on the web\n    Copyright 2012-2016 Mikey Garcia & Nate Kornell\n\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License version 3 as published by\n    the Free Software Foundation.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>\n \t\t\n\t\tKitten release (2019) author: Dr. Anthony Haffey (a.haffey@reading.ac.uk)\t\t\n*/\n-->\n<style>\n#instruct_text{\n  margin:auto;\n  width:500px;\n  padding:50px;\n  max-height:600px;\n  text-align: center;  \n}\n#proceed_button{\n  position:absolute;\n  right: 20px;\n}\n#trial_contents{\n  position: absolute;\n  top:0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  margin:auto;\n  width:600;\n  height:600;\n}\n</style>\n<div id=\"trial_contents\">\n  <div id=\"instruct_text\">{{text}}</div>\n  <div>\n    <button class=\"btn btn-primary\" id=\"proceed_button\" onclick=\"Trial.submit()\">Proceed</button>\n  </div>\n</div>", "finger_imitation": "<style>\n#everything{\n  margin:auto;\n  width:500px;\n  padding:50px;\n  max-height:600px;\n  text-align: center;  \n}\n#face_image{\n/*  display:none; */\n}\n</style>\n<div id=\"everything\">\n  <div id=\"instructions\">\n    Please put your <b>right index finger</b> on the <b>N</b> key, and your <b>right middle finger</b> on the <b>M</b> key.\n  </div>\n  <img id=\"face_image\" src=\"../User/Stimuli/{{face}}\" />\n</div>\n<button onclick=\"Trial.submit()\">Proceed</button>\n\n<script>\n//detect when both the index and middle finger are down\n\n//$(\"#\")\n\n</script>", "finger imitation": null, "survey": "<!--\n  Author: Dr. Anthony Haffey\n\n  Collector: Cat/Kitten release\n  A program for running experiments on the web\n  Copyright 2012-2018 Mikey Garcia & Nate Kornell\n\n\n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License version 3 as published by\n  the Free Software Foundation.\n\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>\n\n  Kitten release (2019) author: Dr. Anthony Haffey (a.haffey@reading.ac.uk)\n-->\n<style>\ntd{\n  padding:10px;\n  vertical-align: top;\n}\n#content{\n  width:95%;\n}\n#proceed_button{\n  display:none;\n  float:right;\n}\n#this_survey_id{\n  padding:            20px;\n  display:            none;\n}\n#survey_outline{\n  background-color:   white;\n  color:              #0a3272;\n  border-radius:      20px;\n}\n#survey_tabs{\n  padding:            20px;\n}\n\n.btn-primary{\n\tcolor:#fff;\n\tbackground-color:#069;\n\tborder-color:#069;\n}\n.btn-primary:hover,\n.btn-primary:focus {\n  background-color: #09c;\n}\n\n.btn-primary:focus {\n  outline: 0;\n}\n\n.btn-primary:active {\n  background-color:#0f9;\n}\n.feedback_span_multiple{\n  display:none;\n  margin :10px;\n}\n.feedback_span_single{\n  display:none;\n  padding:10px;\n}\n.likert_table td{\n  padding:1px;\n  text-align:center;\n}\n.likert_table td:hover{\n  color:blue;\n}\n.score_total{\n  display:none;\n}\n.show_tab{\n  margin:5px;\n}\n.table_break{\n  width:100%;\n}\n</style>\n<div id=\"survey_outline\"></div>\n<script>\n/////////////////////////\n// Retrieving settings //\n/////////////////////////\n\nif(typeof(settings) !== \"undefined\"){\n  settings = [settings];\n} else {\n  settings = {};\n}\n\n//////////////////////////////////\n// vertical vs. horizontal tabs //\n//////////////////////////////////\n\nif(typeof(settings.tab_hor_vert) == \"undefined\" || settings.tab_hor_vert.toLowerCase() == \"horizontal\"){\n  settings.tab_hor_vert = \"horizontal\";\n  $(\"#survey_outline\").html(  '<div id=\"please_wait_div\">Loading... Please wait</div>'+\n                              '<div id=\"this_survey_id\" class=\"needs-validation\" novalidate></div>'+\n                              '<div id=\"survey_tabs\" style=\"text-align:right\" class=\"border-top border-primary\"></div><input type=\"submit\" value=\"Proceed\" class=\"btn btn-primary\" id=\"proceed_button\">');\n\n} else if (settings.tab_hor_vert.toLowerCase() == \"vertical\"){\n  $(\"#survey_outline\").html( '<table>'+\n                                '<tr>'+\n                                  '<td valign=\"top\" class=\"border-right border-primary\">'+\n                                    '<div id=\"survey_tabs\"></div></td>' +\n                                  '<td>'+\n                                    '<div id=\"please_wait_div\">Please wait while survey is downloading</div>'+\n                                    '<div id=\"this_survey_id\" class=\"needs-validation\" novalidate></div>' +\n                                    '<input type=\"button\" value=\"Proceed\" class=\"btn btn-primary\" id=\"proceed_button\">'+\n                                  '</td>'+\n                                '</tr>'+\n                              '</table>');\n} else if(settings.tab_hor_vert.toLowerCase() == \"none\"){\n  $(\"#survey_outline\").html(  '<div id=\"survey_tabs\" style=\"display:none\"></div>' +\n                              '<div id=\"please_wait_div\">Please wait while survey is downloading</div>'+\n                              '<div id=\"this_survey_id\" class=\"needs-validation\" novalidate></div>');\n} else {\n  bootbox.alert(\"If you are the researcher, please check the 'settings for this survey. The input for 'tab_hor_vert' appears to be invalid. Please change it to 'horizontal' or 'vertical' or 'none' or remove 'tab_hot_vert' altogether from the settings, which will make the tabs invisible\");\n}\n</script>\n\n<span id=\"scales_span\"></span>\n\n<script>\n\nString.prototype.replaceAll = function(str1, str2, ignore) {\n  //by qwerty at https://stackoverflow.com/questions/2116558/fastest-method-to-replace-all-instances-of-a-character-in-a-string\n  return this.replace(new RegExp(str1.replace(/([\\/\\,\\!\\\\\\^\\$\\{\\}\\[\\]\\(\\)\\.\\*\\+\\?\\|\\<\\>\\-\\&])/g,\"\\\\$&\"),(ignore?\"gi\":\"g\")),(typeof(str2)==\"string\")?str2.replace(/\\$/g,\"$$$$\"):str2);\n}\n\n\n//////////////////////\n// Defining objects //\n//////////////////////\n\npage_break_management = {\n  breaks_remaining : 0,\n  breaks_index     : 0\n}\n\nproceed_object = {\n  type:[],\n  name:[],\n  break_no:[]\n};\n\nscoring_object={\n  scales:[],\n  scale_scores:[],\n  update_scales:function(this_survey){\n    headers = Object.keys(this_survey[0]);\n    this.scales = headers.filter(elm => elm.includes(\"score:\"));\n    var scales_html = '';\n    this.scales.forEach(function(element){\n      element = element.replace(\": \",\":\");\n      scales_html += \"<input name='\"+element.replace(/ |:/g,\"_\")+\"' class='score_total \"+element.replace(/ |:/g,\"_\")+\"' disabled>\";\n    });\n    $(\"#scales_span\").html(scales_html);\n  }\n}\n\nsurvey_obj = {};\n\n\n/////////////////////\n// Element actions //\n/////////////////////\n\n/*\n$(function() {\n  $( \".datepicker\" ).datepicker({\n    dateFormat : 'mm/dd/yy',\n    changeMonth : true,\n    changeYear : true,\n    yearRange: '-100y:c+nn',\n    maxDate: '-1d'\n  });\n});\n*/\n\n\n$('#ExperimentContainer').css('transform','scale(1,1)');\n\n$(\"#proceed_button\").on(\"click\",function(){\n  var proceed = true;\n  var tabs    = document.getElementsByClassName('show_tab active');\n  if(tabs.length > 0){\n    var current_tab       = document.getElementsByClassName('show_tab active')[0].id.replace(\"_button\",\"\").replace(\"tab_\",\"\");\n    var response_elements = $('#table_'+current_tab).find('.response_element');\n\n  } else {\n    response_elements = $(\".table_break:visible\").find(\".response_element\");\n    //response_elements     = $('.response_element');\n  }\n\n  for(var i = 0; i < response_elements.length; i++){\n    [this_row_no,item_name] = retrieve_row_no_item_name(response_elements[i]);\n    var this_optional = survey_obj.data[this_row_no].optional.toLowerCase();\n\n    if(this_optional.indexOf(\"no\") !== -1){\n      this_optional = this_optional.split(\"-\");       // find out whether there's a minimal number of responses\n      if(this_optional.length == 1){                  // default is that length needs to be at least 1\n        var min_resp_length = 1;\n      } else if(this_optional.length == 2) {\n        var min_resp_length = this_optional[1];\n      } else {\n        bootbox.alert(\"Error - you appear to have too many '-' characters in the 'optional' column\");\n        return false;\n      }\n    } else {\n      min_resp_length = 0;\n    }\n\n    var quest_resp = isJSON($(\"#\"+response_elements[i].id).val());\n    if (quest_resp.length < min_resp_length){\n      proceed = false;\n      $(\"#\"+response_elements[i].id.replace(\"response\",\"question\")).removeClass(\"text-success\");\n      $(\"#\"+response_elements[i].id.replace(\"response\",\"question\")).addClass(\"text-danger\");\n    } else {\n      $(\"#\"+response_elements[i].id.replace(\"response\",\"question\")).removeClass(\"text-danger\");\n      $(\"#\"+response_elements[i].id.replace(\"response\",\"question\")).addClass(\"text-success\");\n    }\n  }\n\n  if(current_tab == survey_obj.tabs && proceed){\n    if(typeof(sql_surveys) == \"undefined\"){\n      //$(\".table_break\");\n      console.dir('$(\".table_break:visible\")');\n      console.dir($(\".table_break:visible\"));\n      var next_table_no = parseFloat($(\".table_break:visible\")[0].id.replace(\"table\",\"\")) + 1;\n      console.dir(\"next_table_no\");\n      console.dir(next_table_no);\n      console.dir($(\".table_break#table_\"+next_table_no));\n\n      if($(\".table_break#table\"+next_table_no).length == 0){\n        if(typeof(Trial) !== \"undefined\"){\n          Trial.submit();\n        } else {\n          bootbox.alert(\"You've finished! Click on the preview button to restart.\")\n        }\n      } else {\n        $(\".table_break\").hide();\n        $(\".table_break#table\" + next_table_no).show();\n      }\n    } else {\n      $(\"#survey_outline\").html(\"<h1> You have finished the preview of this survey.</h1>\");\n    }\n  } else if(current_tab < survey_obj.tabs && proceed) {\n    current_tab ++;\n    $(\"#tab_\"+current_tab+\"_button\").removeClass(\"btn-secondary\");\n    $(\"#tab_\"+current_tab+\"_button\").removeClass(\"disabled\");\n    $(\"#tab_\"+current_tab+\"_button\").addClass(\"btn-outline-primary\");\n    $(\"#tab_\"+current_tab+\"_button\").click();\n  } else if(proceed == false){\n    bootbox.alert(\"You have failed to complete at least one compulsory input.\");\n  } else if(current_tab > survey_obj.tabs){\n    bootbox.alert(\"Error - please contact the Collector team about this problem, error 'Survey_001'.\");\n  }\n});\n\n\n///////////////\n// Functions //\n///////////////\n\n\nfunction load_survey(survey){\n  // are we in preview?\n  /////////////////////\n  console.dir(\"survey\");\n  console.dir(survey);\n  if(typeof(master_json) !== \"undefined\" && master_json.surveys.preview){     // Yes\n    survey_content = survey;                                                    // i.e. the content has been passed through directly\n    survey_obj.boosts = master_json.boosts;                                //no need to be efficient in preview\n\n  } else {                                                                      // No\n    survey = survey.toLowerCase().replace(\".csv\",\"\") + \".csv\";\n\n    if(typeof(parent.parent.exp_json.surveys) !== \"undefined\" && \n       typeof(parent.parent.exp_json.surveys[survey]) !== \"undefined\"){\n      survey_content = parent.parent.exp_json.surveys[survey];\n      survey_obj.boosts = parent.parent.exp_json.boosts;                     //take boosts from exp_json\n\n    } else {\n      bootbox.alert(\"Survey \" + survey  + \" doesn't appear to exist\");\n    }\n  }\n  process_returned_questionnaire(survey_content);\n}\n\nfunction generate_feedback_string(feedback_array,this_index,feedback_color,row_no,this_row){\n  if(feedback_array){                 //i.e. if it's not null\n    if(feedback_array.length > 1){\n      return \"<div class='feedback_span_multiple \"+this_row[\"item_name\"].toLowerCase()+\"_feedback' style='color:\"+feedback_color[this_index]+\"'>\"+feedback_array[this_index]+\"</div>\";\n    } else {\n      return \"<div class='feedback_span_single \"+this_row[\"item_name\"].toLowerCase()+\"_feedback' style='color:\"+feedback_color[this_index]+\"'>\"+feedback_array[this_index]+\"</div>\";\n    }\n  } else {\n    return \"\";\n  }\n}\n\nfunction isJSON(str) {\n  try {\n    return JSON.parse(str);\n  } catch (e) {\n    return str;\n  }\n}\n\n\nfunction likert_update(this_element,this_response,this_value){\n  [row_no,item_name] = retrieve_row_no_item_name(this_element);\n  $(\".row_\"+row_no).removeClass(\"active\");\n  $(\".row_\"+row_no).removeClass(\"btn-primary\");\n  $(\".row_\"+row_no).addClass(\"btn-outline-primary\");\n  $(this_element).removeClass(\"btn-outline-primary\");\n  $(this_element).addClass(\"btn-primary\");\n  $(\"#survey_\"+item_name+\"_response\").val(this_response);\n  response_check(this_element);\n}\n  console.dir(\"breaking near here? huh?\");\n\nfunction process_item_score(survey_obj,row_no,values_col,this_response,item,values_reverse){\n  console.dir(\"breaking near here?\");\n  item_values       = survey_obj.data[row_no][values_col].split(\"|\");\n  if(typeof(values_reverse) !== \"undefined\" && values_reverse == \"r\"){\n    item_values.reverse();\n  }\n  item_answers      = survey_obj.data[row_no][\"answers\"].split(\"|\");\n  var this_value    = item_values[item_answers.indexOf(this_response)];\n  $(\"#survey_\" + item + \"_score\").val(this_value);\n  if(typeof(this_value) !== \"undefined\"){\n    return parseFloat(this_value);\n  }\n}\n\nfunction process_returned_questionnaire(data){\n  survey_obj.data = data;\n  survey_obj.data = Papa.parse(Papa.unparse(survey_obj.data),{\n                      header:true,\n                      beforeFirstChunk: function(chunk) {\n                        var rows = chunk.split( /\\r\\n|\\r|\\n/ );\n                        var headings = rows[0].toLowerCase();\n                        rows[0] = headings;\n                        return rows.join(\"\\r\\n\");\n                      },\n                    }).data;\n\n  var col_headers = Object.keys(survey_obj.data[0]);\n  survey_obj.scales = {};\n\n  col_headers.forEach(function(header){\n    if(header.indexOf(\"score:\")==0){\n      var original_header = header;\n      header = header.replace(\"score: \",\"\");\n      header = header.replace(\"score:\",\"\");\n\n      survey_obj.scales[header] = {};\n      survey_obj.scales[header].questions = {};\n\n      //identify which questions\n      for(var i = 1; i< survey_obj.data.length; i++){\n        row = survey_obj.data[i];\n        if(row[original_header] !== \"\" && typeof(row[original_header]) !== \"undefined\"){\n          survey_obj.scales[header].questions[i] = row[original_header];\n        }\n      }\n    }\n  });\n  write_survey(survey_obj.data,\"this_survey_id\");\n  $(\"#please_wait_div\").hide();\n  $(\"#proceed_button\").show();\n\n  $('html, body').animate({\n    scrollTop: $(\"#survey_outline\").offset().top\n  }, 1000);\n}\n\nfunction process_survey_question(this_row,row_no){\n\n  if(this_row.values == \"\"){\n    this_row.values = this_row.answers;\n  }\n\n  if(typeof(this_row[\"text\"]) !== \"undefined\" && typeof(this_row[\"type\"]) !== \"undefined\" && this_row['text'].toLowerCase() == \"page_break\" | this_row['type'].toLowerCase() == \"page_break\"){\n        page_break_management.breaks_remaining++;\n        question_td = \"</tr></table><table id='table\"+page_break_management.breaks_remaining+\"' style='display:none' class='table_break'></tr>\";\n  } else {\n\n    if(typeof(this_row[\"values\"]) !== \"undefined\" & typeof(this_row[\"values\"]) !== \"function\"){ //to address microsoft edge issue.\n      value_array = this_row[\"values\"].split(\"|\");\n    } else {\n      value_array='';\n    }\n\n    if(this_row[\"item_name\"].indexOf(\" \") !== -1){\n      bootbox.alert(\"Please note that the 'item name' '\" + this_row['item_name'] + \"' is invalid because it has at least one space. Please use underscores instead of spaces. If you're not the creator of this task, please contact the person who created it.\");\n    }\n\n    // class for scoring\n    this_class = \"\";\n    for(var i=0;i<scoring_object.scales.length;i++){\n      if(this_row[scoring_object.scales[i].toLowerCase()]==\"1\"){\n        this_class += scoring_object.scales[i].toLowerCase().replace(\"score: \",\"\").replace(/ |-/,\"\")+\" \";\n      }\n      if(this_row[scoring_object.scales[i].toLowerCase()]==\"r1\"){\n        this_class += scoring_object.scales[i].toLowerCase().replace(\"score: \",\"\").replace(\" \",\"_\")+\"-r1 \";\n      }\n    }\n\n    [feedback_array,feedback_color] = retrieve_feedback(this_row);\n\n    response_html = '<input type=\"hidden\" class=\"response_element row_'+row_no+'\" id=\"survey_'+this_row[\"item_name\"].toLowerCase()+'_response\" name=\"survey_'+this_row[\"item_name\"].toLowerCase()+'_response\"  value=\"\">';\n\n\n    // Survey settings\n    ////////////////////\n\n    [row_ques_perc,row_resp_perc] = quest_resp_perc(settings.quest_resp_rat);\n\n    if(typeof(settings.feedback_before_response) == \"undefined\"){\n        settings.feedback_before_response = true;\n    }\n\n    if(typeof(settings.lock_after_feedback) == \"undefined\"){\n        settings.lock_after_feedback = false;\n    }\n    var question_td='';\n\n    if(typeof(this_row[\"type\"]) == \"undefined\"){\n        return false;\n    }\n\n    // Item types\n    ///////////////\n\n    if(typeof(survey_obj.boosts) !== \"undefined\" && typeof(survey_obj.boosts[this_row.type]) !== \"undefined\"){\n\n      var boost_html = survey_obj.boosts[this_row.type].contents;\n      console.dir(boost_html);\n\n      //for each row variable, insert it into the boost if possible?\n      Object.keys(this_row).forEach(function(attribute){\n        console.dir(boost_html);\n        boost_html = boost_html.replaceAll(\"{{\"+attribute+\"}}\",this_row[attribute]);\n      });\n      question_td += boost_html;\n    } else {\n\n      switch(this_row[\"type\"].toLowerCase()){\n        case \"page_start\":\n          var tabs_html = $(\"#survey_tabs\").html();\n          if(settings.tab_hor_vert == \"horizontal\"){\n            span_div = \"span\";\n          } else if(settings.tab_hor_vert == \"vertical\"){\n            span_div = \"div\";\n          }\n          if(typeof(survey_obj.tabs) == \"undefined\"){\n            survey_obj.tabs = 0;\n          } else {\n            survey_obj.tabs++;\n          }\n          if(survey_obj.tabs == 0){ //i.e. is the first tab\n            active_button = \"btn-outline-primary active\";\n          } else {\n            active_button = \"btn-secondary disabled\";\n          }\n          if(settings.tab_hor_vert == \"vertical\"){\n            var vert_btn_block = \"btn-block\";\n          } else {\n            var vert_btn_block = \"\";\n          }\n\n          tabs_html +=  '<'+span_div+' class=\"btn-group-toggle\" data-toggle=\"buttons\">'+\n            '<label id=\"tab_' + survey_obj.tabs + '_button\" class=\"btn show_tab '+active_button+' '+vert_btn_block+'\">'+\n              '<input type=\"checkbox\" checked autocomplete=\"off\">'+ this_row['text'] +\n            '</label>'+\n          '</'+span_div+'>';\n\n          $(\"#survey_tabs\").html(tabs_html);\n\n          page_break_indexes = [];\n          survey_obj.data.forEach(function(this_row,this_index){\n            if(typeof(this_row.type) !== \"undefined\" && this_row.type.toLowerCase() == \"page_start\"){\n              page_break_indexes.push(this_index);\n            }\n          });\n\n          if(survey_obj.tabs>0){\n            question_td += \"</td><td></td></tr></table></div><div class='survey_page' id='tab_\"+survey_obj.tabs+\"' style='display:none'><table id='table_\"+survey_obj.tabs+\"' class='table_break'><tr>\";\n          } else {\n            question_td += \"</td><td></td></tr></table><div class='survey_page' id='tab_\"+survey_obj.tabs+\"' ><table id='table_\"+survey_obj.tabs+\"' class='table_break'><tr>\";\n          }\n        break;\n\n        case \"checkbox\":\n        case \"checkbox_vertical\":\n          var options = this_row[\"answers\"].split(\"|\");\n          question_td +=  response_html;\n          for(var i=0; i<options.length;i++){\n            feedback_string = generate_feedback_string(feedback_array,i,feedback_color,row_no,this_row);\n            question_td +=  '<div class=\"custom-control custom-checkbox\">'+\n                '<input type=\"checkbox\" class=\"custom-control-input '+this_class+' custom-control custom-checkbox '+this_row[\"item_name\"]+'_item row_'+row_no+'\" id=\"'+this_row[\"item_name\"]+ i +'\"  onchange=\"response_check(this)\" name=\"survey_'+this_row[\"item_name\"].toLowerCase()+'\">'+\n                '<label class=\"custom-control-label\" for=\"'+this_row[\"item_name\"]+i+'\">'+options[i]+'</label>'+\n                feedback_string +\n            '</div>';\n          }\n          break;\n\n          case \"checkbox_horizontal\":\n            feedback_string = generate_feedback_string(feedback_array,0,feedback_color,row_no,this_row);\n            var options = this_row[\"answers\"].split(\"|\");\n            question_td += response_html;\n            question_td += '<table><tr>';\n            for(var i=0; i<options.length;i++){\n              question_td +=  '<td>'+\n                                '<div class=\"custom-control custom-checkbox\">'+\n                                  '<input type=\"checkbox\" class=\"custom-control-input '+this_class+' custom-control custom-checkbox '+this_row[\"item_name\"]+'_item row_'+row_no+'\" id=\"'+this_row[\"item_name\"]+ i +'\"  onchange=\"response_check(this)\" name=\"survey_'+this_row[\"item_name\"].toLowerCase()+'\">'+\n                                    '<label class=\"custom-control-label\" for=\"'+this_row[\"item_name\"]+i+'\">'+options[i]+'</label>'+\n                                '</div>'+\n                              '</td>';\n            }\n            question_td += '</tr></table>'+feedback_string;\n          break;\n\n          case \"checkbox_single\":\n            feedback_string = generate_feedback_string(feedback_array,0,feedback_color,row_no,this_row);\n            var this_option = this_row[\"answers\"];\n            question_td +=  response_html +\n                            '<div class=\"btn-group-toggle\" data-toggle=\"buttons\">'+\n                                '<label class=\"btn btn-outline-primary\">'+\n                                    '<input type=\"checkbox\" class=\"'+this_row[\"item_name\"]+'_item row_'+row_no+'\"  checked autocomplete=\"off\" id=\"'+this_row[\"item_name\"]+'\" onchange=\"response_check(this)\" name=\"survey_'+this_row[\"item_name\"].toLowerCase()+'\">'+ this_option +\n                                '</label>'+\n                            '</div>' + feedback_string;\n          break;\n\n          case \"date\":\n              feedback_string = generate_feedback_string(feedback_array,0,feedback_color,row_no,this_row);\n              question_td+=   response_html+\n                              \"<input onchange='response_check(this)' class='custom-control datepicker date \"+this_row[\"item_name\"]+\"_item row_\"+row_no+\"' type='text' name='survey_\"+this_row['item_name'].toLowerCase()+\"'>\"+\n                              feedback_string;\n          break;\n\n          case \"dropdown\":\n              feedback_string = generate_feedback_string(feedback_array,0,feedback_color,row_no,this_row);\n              var options = this_row[\"answers\"].split(\"|\");\n              question_td += response_html +\n                                  '<select class=\"custom-select '+this_row[\"item_name\"]+'_item row_'+row_no+'\" onchange=\"response_check(this)\" collector_button\" name=\"survey_'+this_row[\"item_name\"].toLowerCase()+'\">'+\n                                      '<option selected disabled hidden>-- no option selected --</option>';\n              for(var i=0; i<options.length;i++){\n                  question_td += \"<option>\"+options[i]+\"</option>\";\n              }\n              question_td += '</select>'+feedback_string;\n          break;\n\n          case \"email\":\n              feedback_string = generate_feedback_string(feedback_array,0,feedback_color,row_no,this_row);\n              question_td += response_html+\"<input class='form-control type='email' \"+this_row[\"item_name\"]+\"_item row_\"+row_no+\"' onchange='response_check(this)' type='text' name='survey_\"+this_row['item_name'].toLowerCase()+\"'>\";\n              question_td += feedback_string;\n          break;\n\n          case \"google_slide\":\n          case \"instruct\":\n              //question_td += </td>\"; // \"<span class='text-primary'>\" + this_row[\"text\"] + \"</span>\";\n          break;\n\n          // tidy up this code for nice looking buttons\n          case \"likert\":\n              feedback_string = generate_feedback_string(feedback_array,0,feedback_color,row_no,this_row);\n              console.dir(\"break coming up, ja?\");\n              console.dir(this_row);\n              var options  = this_row[\"answers\"].split(\"|\");\n              if(typeof(this_row[\"values\"]) == \"undefined\"){\n                this_row[\"values\"] = this_row[\"answers\"];\n              }\n              var values   = this_row[\"values\"].split(\"|\");\n              question_td += \"<table class='likert_table'><tr>\" +\n                                  '<td>'+\n                                      response_html +\n                                      '<div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">'; //to help detect blank likert's\n              for(var i=0; i<options.length;i++){\n                  question_td+=   '<button type=\"button\" class=\"btn btn-outline-primary '+this_row[\"item_name\"]+'_item row_'+row_no+'\"  autocomplete=\"off\" id=\"likert_'+row_no+'_'+i+'\"  onclick=\"likert_update(this,\\''+options[i]+'\\',\\''+values[i]+'\\')\">'+options[i]+'</button>';\n\n              }\n              question_td +=  \"</div>\"+\n                              \"<input type='hidden' class='\"+this_class+\"' id='survey_\"+this_row[\"item_name\"].toLowerCase()+\"_score' name='survey_\"+this_row[\"item_name\"].toLowerCase()+\"_score'>\"+\n                          \"</td>\"+\n                      \"</tr>\"+\n                  \"</table>\"+feedback_string;\n          break;\n\n          case \"number\":\n              feedback_string = generate_feedback_string(feedback_array,0,feedback_color,row_no,this_row);\n              question_td += response_html +\"<input type='number'  onchange='response_check(this)' class='form-control \"+this_row[\"item_name\"]+\"_item row_\"+row_no+\"' name='survey_\"+this_row['item_name'].toLowerCase()+\"'>\" + feedback_string;\n          break;\n\n          case \"para\":\n              feedback_string = generate_feedback_string(feedback_array,0,feedback_color,row_no,this_row);\n              question_td += response_html+\"<textarea name='survey_\"+this_row['item_name'].toLowerCase()+\"' class='\"+this_row[\"item_name\"]+\"_item row_\"+row_no+\"' onchange='response_check(this)' style='width:100%;height:200px'></textarea>\";\n              question_td += feedback_string;\n          break;\n\n          case \"radio\":\n          case \"radio_vertical\":\n            var options = this_row[\"answers\"].split(\"|\");\n            var values   = this_row[\"values\"].split(\"|\");\n            question_td +=  response_html;\n            for(var i=0; i<options.length;i++){\n              feedback_string = generate_feedback_string(feedback_array,i,feedback_color,row_no,this_row);\n\n              question_td +=  '<div class=\"custom-control custom-radio\">'+\n                                '<input type=\"radio\" class=\"custom-control-input '+this_class+'  onclick=\"likert_update(this,\\''+options[i]+'\\',\\''+values[i]+'\\')\" custom-control custom-radio '+this_row[\"item_name\"]+'_item row_'+row_no+'\" id=\"'+this_row[\"item_name\"]+ i +'\"  onchange=\"response_check(this)\" value=\"' + options[i] + '\" name=\"survey_'+this_row[\"item_name\"].toLowerCase()+'\">'+\n                                '<label class=\"custom-control-label\" for=\"'+this_row[\"item_name\"]+i+'\">'+options[i]+'</label>'+\n                                  feedback_string +\n                              '</div>';\n\n\n            }\n            question_td +=  \"<input type='hidden' class='\"+this_class+\"' id='survey_\"+this_row[\"item_name\"].toLowerCase()+\"_score' name='survey_\"+this_row[\"item_name\"].toLowerCase()+\"_score'>\";\n          break;\n\n          case \"radio_horizontal\":\n              feedback_string = generate_feedback_string(feedback_array,0,feedback_color,row_no,this_row);\n              var options = this_row[\"answers\"].split(\"|\");\n              question_td +=  response_html;\n              for(var i=0; i<options.length;i++){\n                  question_td +=  '<div class=\"custom-control custom-radio custom-control-inline\">'+\n                                      '<input type=\"radio\" class=\"custom-control-input '+this_class+' custom-control custom-radio '+this_row[\"item_name\"]+'_item row_'+row_no+'\" id=\"'+this_row[\"item_name\"]+ i +'\"  onchange=\"response_check(this)\" name=\"survey_'+this_row[\"item_name\"].toLowerCase()+'\">'+\n                                      '<label class=\"custom-control-label\" for=\"'+this_row[\"item_name\"]+i+'\">'+options[i]+'</label>'+\n                                      '<div class=\"invalid-feedback\">Example invalid feedback text</div>'+\n                                  '</div>'\n              }\n              question_td += feedback_string;\n          break;\n\n          case \"report_score\":\n              question_td += \"<input disabled class='form-control score_\" + this_row[\"item_name\"] + \" \"+this_row[\"item_name\"]+\"_item row_\"+row_no+\"' type='text' name='survey_\"+this_row['item_name'].toLowerCase()+\"'>\";\n          break;\n\n          case \"text\":\n              feedback_string = generate_feedback_string(feedback_array,0,feedback_color,row_no,this_row);\n              question_td += response_html+\"<input class='form-control \"+this_row[\"item_name\"]+\"_item row_\"+row_no+\"' onchange='response_check(this)' type='text' name='survey_\"+this_row['item_name'].toLowerCase()+\"'>\";\n              question_td += feedback_string;\n          break;\n\n      }\n    }\n    if(feedback_array){\n        question_td += \"<button class='btn btn-outline-info feedback_btn \"+this_row[\"item_name\"]+\"_item row_\"+row_no+\"' data-toggle='tooltip' id='reveal_\"+this_row[\"item_name\"].toLowerCase()+\"_feedback'  onclick='reveal_answers(this)'>Show</button>\";\n    }\n  }\n//  question_td += '</td>';\n\n  if(typeof(this_row[\"type\"])== \"undefined\"){\n      return '';\n  } else {\n    if(this_row[\"type\"].toLowerCase()==\"instruct\"){\n      var this_row_html=\"<td colspan='2' class='text-primary'>\"+this_row[\"text\"]+\"</label></td>\";\n    } else if(this_row[\"type\"].toLowerCase()==\"google_slide\") {\n      var this_row_html=\"<td colspan='2'>\"+this_row[\"text\"]+\"</label></td>\";\n    } else if(typeof(this_row[\"no_text\"]) !== \"undefined\" && this_row[\"no_text\"] == \"on\"){\n      var this_row_html=\"<td colspan='2'>\"+question_td+\"</td>\";\n    } else {\n      if(this_row['text'].toLowerCase() == \"page_start\" | this_row['type'].toLowerCase() == \"page_start\"){\n        this_row_html = question_td;\n      }else {\n        var this_row_html=\"<td id='survey_\"+this_row[\"item_name\"].toLowerCase().replace(\" \",\"_\")+\"_question' style='width:\"+row_ques_perc+\"'>\"+this_row[\"text\"]+\"</td><td>\"+question_td+\"</label></td>\";\n      }\n    }\n    if(typeof(this_row[\"optional\"]) !== \"undefined\"){\n      if(this_row[\"optional\"].toLowerCase() == \"no\"){\n        proceed_object.name.push(this_row[\"item_name\"]);\n        proceed_object.type.push(this_row[\"type\"]);\n        proceed_object.break_no.push(page_break_management.breaks_remaining);\n      }\n    }\n    if(typeof(this_row[\"shuffle\"]) == \"undefined\" || this_row[\"shuffle\"].toLowerCase() == \"off\"){\n      this_shuffle='none';\n    } else {\n      this_shuffle=this_row[\"shuffle\"];\n    }\n    return [this_row_html,this_shuffle];\n  }\n}\n\nfunction quest_resp_perc(quest_resp_rat){\n  if(typeof(quest_resp_rat) == \"undefined\"){\n    row_resp_perc = \"35%\";\n    row_ques_perc = \"65%\";\n  } else {\n    row_resp_perc = parseFloat(100-quest_resp_rat.replace(\"%\",\"\"))+\"%\";\n    row_ques_perc = parseFloat(quest_resp_rat.replace(\"%\",\"\"))+\"%\";\n  }\n  return [row_ques_perc,row_resp_perc];\n}\n\nfunction response_check(submitted_element){\n  switch(submitted_element.type){\n    case \"checkbox\":\n      var checked_responses = $(\"[name='\"+submitted_element.name+\"']:checked\");\n      if(checked_responses.length){ //i.e. more than 0\n        var values = [];\n        for(var i = 0; i < checked_responses.length; i++){\n          values.push(checked_responses[i].value);\n        }\n        $(\"#\"+submitted_element.name+\"_response\").val(JSON.stringify(values));\n      } else {\n        $(\"#\"+submitted_element.name+\"_response\").val(\"\");\n      }\n      break;\n\n      case \"button\":\n        $(\"#\"+submitted_element.name+\"_response\").val(submitted_element.innerHTML);\n      break;\n\n      case \"number\":\n      case \"select-one\":\n      case \"text\":\n      case \"textarea\":\n        $(\"#\"+submitted_element.name+\"_response\").val(submitted_element.value);\n      break;\n\n\n      case \"radio\":\n        $(\"#\"+submitted_element.name+\"_response\").val(submitted_element.value);\n      break;\n    }\n    update_score();\n}\n\nfunction retrieve_feedback(this_row){\n  if(typeof(this_row[\"feedback\"]) !== \"undefined\" && this_row[\"feedback\"] !== \"\"){\n    feedback_array = this_row[\"feedback\"].split(\"|\");\n    if(typeof(this_row[\"feedback_color\"]) == \"undefined\"){\n      bootbox.alert(\"The color for the feedback options has not been set. If you created this questionnaire, please add a column 'feedback_color' to your survey and separate the colors by a pipe (|) character.\");\n    }\n    feedback_color = this_row[\"feedback_color\"].split(\"|\");\n  } else {\n    feedback_array = null;\n    feedback_color = '';\n  }\n  return [feedback_array,feedback_color];\n}\n\nfunction retrieve_row_no_item_name(this_element){\n  var these_classes = this_element.className.split(\" \");\n  var row_no;\n  var item_name;\n  these_classes.forEach(function(this_class){\n    if (this_class.indexOf('row_') > -1) {\n      row_no = this_class.replace(\"row_\",\"\");\n    }\n    if (this_class.indexOf('_item') > -1) {\n      item_name = this_class.replace(\"_item\",\"\").toLowerCase();\n    }\n  });\n  return [row_no,item_name];\n}\n\nfunction reveal_answers(this_element){\n  var this_response = $(\"#\"+this_element.id.replace(\"reveal_\",\"survey_\").replace(\"_feedback\",\"_response\")).val();\n  response_present = this_response == \"\" ? false : true;\n\n  if(settings.feedback_before_response == false && response_present == false){\n    bootbox.alert(\"Please respond before trying reveal the feedback.\")\n  } else {\n    if($(\"#\"+this_element.id).hasClass(\"btn-outline-info\")){\n      $(\".\"+this_element.id.replace(\"reveal_\",\"\")).show(500);\n      if(settings.lock_after_feedback){\n        var item_class = this_element.id.replace(\"_feedback\",\"_item\").replace(\"reveal_\",\"\");\n        $(\".\"+item_class).prop(\"disabled\",true);\n        document.getElementsByClassName(item_class).title = \"The person creating this content has set it so that your answers are locked in once you have chosen to see the feedback\";\n        $(\"#\"+this_element.id).addClass(\"btn-info\");\n        $(\"#\"+this_element.id).removeClass(\"btn-outline-info\");\n        $(\"#\"+this_element.id).html(\"Locked\");\n        document.getElementById(this_element.id).title = 'The person creating this content has set it so that your answers are locked in once you have chosen to see the feedback';\n        $(\"#\"+this_element.id).addClass(\"disabled\");\n      } else {\n        $(\"#\"+this_element.id).html(\"Hide\");\n        $(\"#\"+this_element.id).removeClass(\"btn-outline-info\");\n        $(\"#\"+this_element.id).addClass(\"btn-info\");\n      }\n    } else {\n      $(\"#\"+this_element.id).html(\"Show\");\n      $(\".\"+this_element.id.replace(\"reveal_\",\"\")).hide(500);\n      $(\"#\"+this_element.id).addClass(\"btn-outline-info\");\n      $(\"#\"+this_element.id).removeClass(\"btn-info\");\n    }\n  }\n}\n\nfunction shuffle(array) {                                   // http://stackoverflow.com/questions/962802#962890\n  var tmp, current, top = array.length;\n  if(top) while(--top) {\n    current = Math.floor(Math.random() * (top + 1));\n    tmp = array[current];\n    array[current] = array[top];\n    array[top] = tmp;\n  }\n  return array;\n}\n\nfunction update_score(){\n  var scales = Object.keys(survey_obj.scales);\n  scales.forEach(function(scale){\n    this_scale = survey_obj.scales[scale];\n    var questions = Object.keys(this_scale.questions);\n    var this_score = 0;\n    complete_score = true;\n\n    questions.forEach(function(row_no){\n      var item = survey_obj.data[row_no].item_name.toLowerCase();\n      var this_response = $(\"#survey_\"+item+\"_response\").val(); //response\n      var normal_reverse = this_scale.questions[row_no];\n\n      if(normal_reverse.indexOf(\"-\") == -1){\n        var multiplier = parseFloat(normal_reverse.replace(\"r\",\"\"));\n        if(normal_reverse.indexOf(\"r\") == 0){ //reverse the values\n          this_value = process_item_score(survey_obj,row_no,\"values\",this_response,item,\"r\");\n        } else {\n          this_value = process_item_score(survey_obj,row_no,\"values\",this_response,item);\n        }\n      } else {\n        values_reverse = normal_reverse.split(\"-\");\n        values_col     = values_reverse[0].toLowerCase();\n        normal_reverse = values_reverse[1];\n        var multiplier = parseFloat(normal_reverse.replace(\"r\",\"\"));\n\n        if(normal_reverse.indexOf(\"r\") == 0){ //reverse the values\n          this_value = process_item_score(survey_obj,row_no,values_col,this_response,item,\"r\");\n        } else {\n          this_value = process_item_score(survey_obj,row_no,values_col,this_response,item);\n        }\n      }\n      if(typeof(this_value) !== \"undefined\"){\n        this_score += multiplier * this_value;\n      } else {\n        complete_score = false;\n      }\n    });\n    if(complete_score){\n      $(\".score_\"+scale).addClass(\"bg-success\");\n      $(\".score_\"+scale).removeClass(\"bg-danger\");\n      $(\".score_\"+scale).addClass(\"text-light\");\n      document.getElementsByClassName(\"score_\"+scale).title = 'All relevant questions have been answered';\n    } else {\n      $(\".score_\"+scale).removeClass(\"text-success\");\n      $(\".score_\"+scale).addClass(\"bg-danger\");\n      $(\".score_\"+scale).addClass(\"text-light\");\n      document.getElementsByClassName(\"score_\"+scale).title = 'At least one relevant questions has NOT been answered';\n    }\n    $(\".score_\"+scale).val(this_score);\n  });\n}\n\nfunction write_survey(this_survey,this_id){\n  scoring_object.update_scales(this_survey);\n  this_survey_html=\"<table class='table_break' id='table0'>\";\n  this_survey_object={\n    content:[],\n    shuffle:[],\n    content_new_order:[],\n    shuffled_content:[],\n    shuffled_arrays:{},\n  }\n\n  this_survey_html += \"<tr>\";\n  for(i = 0; i < this_survey.length; i++){\n    this_row = this_survey[i];\n    row_html = process_survey_question(this_row,i);\n    this_survey_object.content.push(row_html[0]);\n    this_survey_object.shuffle.push(row_html[1]);\n\t}\n\n\tunique_shuffles = this_survey_object.shuffle.filter((v,i,a)=>a.indexOf(v)==i); //by Camilo Martin on https://stackoverflow.com/questions/1960473/unique-values-in-an-array\n\n\tfor(var i=0;i<unique_shuffles.length;i++){\n    if(typeof(unique_shuffles[i]) !== \"undefined\" &&\n      unique_shuffles[i] !== \"none\" &&\n      unique_shuffles[i] !== \"\"){\n        shuffled_content = this_survey_object.shuffle.map(function(element,index){\n    \t   if(typeof(element)!== \"undefined\" && element.toLowerCase() !== \"none\" && element.toLowerCase() == unique_shuffles[i]){\n  \t       return this_survey_object.content[index];\n    \t   }\n    \t}).filter(elm => typeof(elm) !== \"undefined\");\n    \tnew_order = shuffle(shuffled_content);\n    \tthis_survey_object.shuffled_arrays[unique_shuffles[i]]=new_order; // add new array with dynamic name\n    }\n\t}\n\n\t// loop through lists, taking one off from the shuffled list and replacing the row with one from the shuffled list\n\tfor(var i=0;i<this_survey_object.content.length;i++){\n    var this_index = Object.keys(this_survey_object.shuffled_arrays).indexOf(this_survey_object.shuffle[i]);\n    if(this_index !== -1){\n      //take first item off relevant list and delete item\n      var this_item = this_survey_object.shuffled_arrays[Object.keys(this_survey_object.shuffled_arrays)[this_index]].shift();\n      this_survey_object.content_new_order[i]=this_item;\n    } else {\n      this_survey_object.content_new_order[i]=this_survey_object.content[i];\n    }\n\t}\n\n\tquestions_in_order = this_survey_object.content_new_order.join(\"</tr><tr>\");\n\tquestions_in_order += \"</tr>\";\n\n\tthis_survey_html += questions_in_order;\n\tthis_survey_html += \"</table>\";\n\n\t$(\"#\" + this_id).html(this_survey_html);\n\t$(\"#\" + this_id).show(1000);\n\n\t//scroll to top\n\n\n\t$(\".show_tab\").on(\"click\",function(){\n    if(this.className.indexOf(\"disabled\") == -1){\n      $(\".show_tab\").removeClass(\"active\");\n      $(\".survey_page\").hide();\n      $(\"#\"+this.id.replace(\"_button\",\"\")).show();\n    } else {\n      bootbox.alert(\"You have not yet unlocked this tab - maybe try clicking on <b>Proceed</b>?\");\n    }\n\t});\n  $('[data-toggle=\"tooltip\"]').tooltip();\n  $(\".custom-checkbox\").prop(\"indeterminate\",true);\n}\n\n//////////////////\n// Load survey  //\n//////////////////\ncurrent_survey = \"{{survey}}\";\nif(typeof(Trial) !== \"undefined\"){  // This check is to help this code work when previewing trialtypes\n  Trial.set_timer(function(){       // This chunk is for when the survey is run within an actual trial\n    load_survey(current_survey);\n  },100);\n} else {                            // This chunk is for when the survey is being previewed in the \"survey editor\"\n  load_survey(current_survey);\n}\n\n\n</script>"}, "conditions": [{"name": "condition_1", "notes": "You can put more detailed notes in this field", "stimuli": "Stimuli.csv", "procedure": "Procedure.csv", "fullscreen": "off", "welcome": "", "participant_id": "random", "end_message": "", "start_message": "", "buffer": "5", "download_at_end": "off", "": ""}, {"name": "", "notes": ""}], "python_procs": {"procedure.csv": "item,trial type,max time,text,shuffle 1,survey,\r\n0,instruct,user,Thank you for participating in this experiment.,off,\t,\r\n2,instruct,user,Thank you for participating in this experiment.,off,\t,\r\n2 to 9,finger_imitation,user,,trials,,\r\n0,survey,user,,off,demographics_py2rm_2020.csv,\r\n,,,,,,"}, "python_stims": {"stimuli.csv": "Cue,Answer,face,emotion,gender,identity,\r\nA,Apple,AF01ANS.JPG,angry,female,1,\r\nB,Banana,AF01HAS.JPG,happy,female,1,\r\n,,AF02ANS.JPG,angry,female,2,\r\n,,AF02HAS.JPG,happy,female,2,\r\n,,AF03ANS.JPG,angry,female,3,\r\n,,AF03HAS.JPG,happy,female,3,\r\n,,AF04ANS.JPG,angry,female,4,\r\n,,AF04HAS.JPG,happy,female,4,\r\n,,AF05ANS.JPG,angry,female,5,\r\n,,AF05HAS.JPG,happy,female,5,\r\n,,AF06ANS.JPG,angry,female,6,\r\n,,AF06HAS.JPG,happy,female,6,\r\n,,AF07ANS.JPG,angry,female,7,\r\n,,AF07HAS.JPG,happy,female,7,\r\n,,AF08ANS.JPG,angry,female,8,\r\n,,AF08HAS.JPG,happy,female,8,\r\n,,AF09ANS.JPG,angry,female,9,\r\n,,AF09HAS.JPG,happy,female,9,\r\n,,AF10ANS.JPG,angry,female,10,\r\n,,AF10HAS.JPG,happy,female,10,\r\n,,AF11ANS.JPG,angry,female,11,\r\n,,AF11HAS.JPG,happy,female,11,\r\n,,AF12ANS.JPG,angry,female,12,\r\n,,AF12HAS.JPG,happy,female,12,\r\n,,AF13ANS.JPG,angry,female,13,\r\n,,AF13HAS.JPG,happy,female,13,\r\n,,AF14ANS.JPG,angry,female,14,\r\n,,AF14HAS.JPG,happy,female,14,\r\n,,AF15ANS.JPG,angry,female,15,\r\n,,AF15HAS.JPG,happy,female,15,\r\n,,AF16ANS.JPG,angry,female,16,\r\n,,AF16HAS.JPG,happy,female,16,\r\n,,AF17ANS.JPG,angry,female,17,\r\n,,AF17HAS.JPG,happy,female,17,\r\n,,AF18ANS.JPG,angry,female,18,\r\n,,AF18HAS.JPG,happy,female,18,\r\n,,AF19ANS.JPG,angry,female,19,\r\n,,AF19HAS.JPG,happy,female,19,\r\n,,AF20ANS.JPG,angry,female,20,\r\n,,AF20HAS.JPG,happy,female,20,\r\n,,AF21ANS.JPG,angry,female,21,\r\n,,AF21HAS.JPG,happy,female,21,\r\n,,AF22ANS.JPG,angry,female,22,\r\n,,AF22HAS.JPG,happy,female,22,\r\n,,AF23ANS.JPG,angry,female,23,\r\n,,AF23HAS.JPG,happy,female,23,\r\n,,AF24ANS.JPG,angry,female,24,\r\n,,AF24HAS.JPG,happy,female,24,\r\n,,AF25ANS.JPG,angry,female,25,\r\n,,AF25HAS.JPG,happy,female,25,\r\n,,AF26ANS.JPG,angry,female,26,\r\n,,AF26HAS.JPG,happy,female,26,\r\n,,AF27ANS.JPG,angry,female,27,\r\n,,AF27HAS.JPG,happy,female,27,\r\n,,AF28ANS.JPG,angry,female,28,\r\n,,AF28HAS.JPG,happy,female,28,\r\n,,AF29ANS.JPG,angry,female,29,\r\n,,AF29HAS.JPG,happy,female,29,\r\n,,AF30ANS.JPG,angry,female,30,\r\n,,AF30HAS.JPG,happy,female,30,\r\n,,AF31ANS.JPG,angry,female,31,\r\n,,AF31HAS.JPG,happy,female,31,\r\n,,AF32ANS.JPG,angry,female,32,\r\n,,AF32HAS.JPG,happy,female,32,\r\n,,AF33ANS.JPG,angry,female,33,\r\n,,AF33HAS.JPG,happy,female,33,\r\n,,AF34ANS.JPG,angry,female,34,\r\n,,AF34HAS.JPG,happy,female,34,\r\n,,AF35ANS.JPG,angry,female,35,\r\n,,AF35HAS.JPG,happy,female,35,\r\n,,AN01ANS.JPG,angry,male,1,\r\n,,AN01HAS.JPG,happy,male,1,\r\n,,AN02ANS.JPG,angry,male,2,\r\n,,AN02HAS.JPG,happy,male,2,\r\n,,AN03ANS.JPG,angry,male,3,\r\n,,AN03HAS.JPG,happy,male,3,\r\n,,AN04ANS.JPG,angry,male,4,\r\n,,AN04HAS.JPG,happy,male,4,\r\n,,AN05ANS.JPG,angry,male,5,\r\n,,AN05HAS.JPG,happy,male,5,\r\n,,AN06ANS.JPG,angry,male,6,\r\n,,AN06HAS.JPG,happy,male,6,\r\n,,AN07ANS.JPG,angry,male,7,\r\n,,AN07HAS.JPG,happy,male,7,\r\n,,AN08ANS.JPG,angry,male,8,\r\n,,AN08HAS.JPG,happy,male,8,\r\n,,AN09ANS.JPG,angry,male,9,\r\n,,AN09HAS.JPG,happy,male,9,\r\n,,AN10ANS.JPG,angry,male,10,\r\n,,AN10HAS.JPG,happy,male,10,\r\n,,AN11ANS.JPG,angry,male,11,\r\n,,AN11HAS.JPG,happy,male,11,\r\n,,AN12ANS.JPG,angry,male,12,\r\n,,AN12HAS.JPG,happy,male,12,\r\n,,AN13ANS.JPG,angry,male,13,\r\n,,AN13HAS.JPG,happy,male,13,\r\n,,AN14ANS.JPG,angry,male,14,\r\n,,AN14HAS.JPG,happy,male,14,\r\n,,AN15ANS.JPG,angry,male,15,\r\n,,AN15HAS.JPG,happy,male,15,\r\n,,AN16ANS.JPG,angry,male,16,\r\n,,AN16HAS.JPG,happy,male,16,\r\n,,AN17ANS.JPG,angry,male,17,\r\n,,AN17HAS.JPG,happy,male,17,\r\n,,AN18ANS.JPG,angry,male,18,\r\n,,AN18HAS.JPG,happy,male,18,\r\n,,AN19ANS.JPG,angry,male,19,\r\n,,AN19HAS.JPG,happy,male,19,\r\n,,AN20ANS.JPG,angry,male,20,\r\n,,AN20HAS.JPG,happy,male,20,\r\n,,AN21ANS.JPG,angry,male,21,\r\n,,AN21HAS.JPG,happy,male,21,\r\n,,AN22ANS.JPG,angry,male,22,\r\n,,AN22HAS.JPG,happy,male,22,\r\n,,AN23ANS.JPG,angry,male,23,\r\n,,AN23HAS.JPG,happy,male,23,\r\n,,AN24ANS.JPG,angry,male,24,\r\n,,AN24HAS.JPG,happy,male,24,\r\n,,AN25ANS.JPG,angry,male,25,\r\n,,AN25HAS.JPG,happy,male,25,\r\n,,AN26ANS.JPG,angry,male,26,\r\n,,AN26HAS.JPG,happy,male,26,\r\n,,AN27ANS.JPG,angry,male,27,\r\n,,AN27HAS.JPG,happy,male,27,\r\n,,AN28ANS.JPG,angry,male,28,\r\n,,AN28HAS.JPG,happy,male,28,\r\n,,AN29ANS.JPG,angry,male,29,\r\n,,AN29HAS.JPG,happy,male,29,\r\n,,AN30ANS.JPG,angry,male,30,\r\n,,AN30HAS.JPG,happy,male,30,\r\n,,AN31ANS.JPG,angry,male,31,\r\n,,AN31HAS.JPG,happy,male,31,\r\n,,AN32ANS.JPG,angry,male,32,\r\n,,AN32HAS.JPG,happy,male,32,\r\n,,AN33ANS.JPG,angry,male,33,\r\n,,AN33HAS.JPG,happy,male,33,\r\n,,AN34ANS.JPG,angry,male,34,\r\n,,AN34HAS.JPG,happy,male,34,\r\n,,AN35ANS.JPG,angry,male,35,\r\n,,AN35HAS.JPG,happy,male,35,\r\n,,,,,,"}, "python_conditions": "Name,Notes,Stimuli,Procedure,fullscreen,welcome,participant_id,end_message,start_message,buffer,download_at_end,\r\ncondition_1,You can put more detailed notes in this field,Stimuli.csv,Procedure.csv,off,,random,,,5,off,\r\n,", "boosts": {}}